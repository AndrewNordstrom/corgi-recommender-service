#!/bin/bash
# Corgi Recommender Development Monitor
# Convenient wrapper for automated development workflow

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Check if Python is available
if ! command -v python3 &> /dev/null; then
    print_error "Python 3 is required but not installed"
    exit 1
fi

# Check if pip is available
if ! command -v pip3 &> /dev/null; then
    print_error "pip3 is required but not installed"
    exit 1
fi

# Install requirements if they don't exist
check_requirements() {
    print_status "Checking Python requirements..."
    
    if ! python3 -c "import aiohttp" 2>/dev/null; then
        print_warning "Installing required Python packages..."
        pip3 install -r requirements.txt
    fi
    
    if ! python3 -c "import selenium" 2>/dev/null; then
        print_warning "Selenium not available - browser monitoring will be limited"
        print_warning "Install ChromeDriver: https://chromedriver.chromium.org/"
    fi
}

# Main function
main() {
    echo -e "${BLUE}"
    echo "  ____                 _   __  __             _ _             "
    echo " / ___|___  _ __ __ _(_) |  \/  | ___  _ __ (_) |_ ___  _ __ "
    echo "| |   / _ \| '__/ _\` | | | |\/| |/ _ \| '_ \| | __/ _ \| '__|"
    echo "| |__| (_) | | | (_| | | | |  | | (_) | | | | | || (_) | |   "
    echo " \____\___/|_|  \__, |_| |_|  |_|\___/|_| |_|_|\__\___/|_|   "
    echo "                |___/                                        "
    echo -e "${NC}"
    echo "Automated Development Workflow"
    echo "=============================="
    
    # Check requirements
    check_requirements
    
    # Parse command line arguments
    case "${1:-start}" in
        "start")
            print_status "Starting automated development workflow..."
            python3 scripts/development/dev_workflow.py "${@:2}"
            ;;
        "status")
            print_status "Checking service status..."
            python3 scripts/development/dev_workflow.py --status
            ;;
        "stop")
            print_status "Stopping all services..."
            python3 scripts/development/dev_workflow.py --stop
            ;;
        "health")
            print_status "Running health check..."
            python3 scripts/development/health_monitor.py --once "${@:2}"
            ;;
        "browser")
            print_status "Running browser check..."
            python3 scripts/development/browser_monitor.py --once "${@:2}"
            ;;
        "help"|"-h"|"--help")
            echo "Usage: $0 [command] [options]"
            echo ""
            echo "Commands:"
            echo "  start      Start the full development workflow (default)"
            echo "  status     Show current service status"
            echo "  stop       Stop all services"
            echo "  health     Run a one-time health check"
            echo "  browser    Run a one-time browser check"
            echo "  help       Show this help message"
            echo ""
            echo "Options:"
            echo "  --verbose, -v    Enable verbose output"
            echo "  --backend-port   Backend port (default: 5000)"
            echo "  --frontend-port  Frontend port (default: 3000)"
            echo ""
            echo "Examples:"
            echo "  $0 start                    # Start full workflow"
            echo "  $0 start --verbose          # Start with verbose output"
            echo "  $0 health --verbose         # Run health check with details"
            echo "  $0 browser --show-browser   # Run browser check with visible browser"
            ;;
        *)
            print_error "Unknown command: $1"
            echo "Use '$0 help' for usage information"
            exit 1
            ;;
    esac
}

# Run main function
main "$@" 